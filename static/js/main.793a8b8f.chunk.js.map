{"version":3,"sources":["connectors/index.ts","reportWebVitals.ts","state/state.tsx","utils/fetchers.ts","utils/toShort.ts","utils/index.ts","components/Token/Token.tsx","utils/formatPriceEth.ts","components/Header/Header.tsx","components/Gallery/Gallery.tsx","components/UserMenu/UserMenu.tsx","components/PrivateRoute/PrivateRoute.tsx","components/Identicon/Identicon.tsx","components/TransactionProgress/TransactionProgress.tsx","components/Login/Login.tsx","layout/Marketplace.tsx","layout/Root.tsx","layout/Profile.tsx","layout/Connect.tsx","hooks/web3.ts","theme/index.ts","index.tsx"],"names":["ConnectorNames","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useAppState","create","set","get","isAuthenticated","contract","undefined","user","tokensOnSale","ethPrice","activatingConnector","transaction","setAuthenticated","authenticated","setContract","library","chainId","a","Error","networkid","id","deployedNetwork","NFTT","networks","String","address","Contract","abi","getSigner","name","symbol","contractDetails","console","log","setUser","getUserTokens","utils","getBalance","balance","formatEther","ownedTokens","setTokensOnSale","setEthPrice","setActivatingConnector","setTransaction","userAddress","ownedTokensEvents","filters","Transfer","queryFilter","results","Map","Promise","all","map","current","ownerOf","args","tokenId","tokenMeta","price","tokenURI","uri","Array","from","buyToken","purchaseToken","value","tx","updateTokensOnSale","getAllOnSale","tokensForSale","reduce","acc","b","push","setTokenSale","onSale","transferToken","to","fetcherETHUSD","url","getState","fetch","json","ethusd","result","fetcherMetadata","error","message","fetchOwner","toShort","factor","slice","Math","round","length","substr","ETHSCAN_API","process","Token","token","isOnSale","onTransfer","onBuy","useState","transfer","setTransfer","onSaleActive","setOnSale","setAddress","setPrice","onTransferClick","e","preventDefault","isAddress","onSaleClick","parseEther","owner","useSWR","data","tokenPriceEth","Intl","NumberFormat","style","currency","format","Number","formatPriceEth","variant","sx","width","bg","borderBottom","src","image","p","pt","as","color","fontSize","fontWeight","m","constants","EtherSymbol","toFixed","mt","target","href","textOverflow","position","overflow","justifyContent","onSubmit","flexDirection","onChange","currentTarget","placeholder","onClick","ml","opacity","find","formatUnits","pointerEvents","Header","history","useHistory","location","useLocation","alignItems","cursor","display","py","pathname","Gallery","useCallback","order","setOrder","useEffect","mb","mr","disabled","gap","columns","sort","BigNumber","toString","localeCompare","numeric","sub","i","index","t","UserMenu","justifySelf","textAlign","height","borderRadius","size","PrivateRoute","Component","component","path","render","props","Identicon","ref","useRef","innerHTML","appendChild","jazzicon","parseInt","TransactionProgress","transactionRef","loading","setLoading","update","subscribe","wait","confirmations","destroy","hash","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","qrcode","pollingInterval","infuraId","REACT_APP_INFURA_ID","rpc","connectorsByName","Metamask","WalletConnect","iconsMap","Login","useWeb3React","connector","activate","Object","keys","currentConnector","activating","connected","borderColor","maxWidth","Marketplace","active","getLibrary","provider","Web3Provider","Root","basename","Profile","exact","my","getErrorMessage","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","Connect","children","account","suppress","ethereum","window","autoRefreshOnNetworkChange","useInactiveListener","tried","setTried","isAuthorized","catch","useEagerConnect","breakpoints","space","fontSizes","fonts","body","heading","layout","container","px","pb","sizes","header","button","logo","sidemenu","chart","cards","nft","border","top","right","links","nav","transition","openSea","content","buttons","primary","fontFamily","lineHeight","paddingX","paddingY","outline","whiteSpace","minWidth","secondary","tertiary","quartiary","filter","connect","fontWeights","bold","lineHeights","subheading","colors","text","white","background","gray","lightGray","midGray","lightBlue","navy","green","amber","lightGreen","red","muted","transparent","white20","black66","divider","forms","input","paragraph","letterSpacing","h1","h2","h3","h4","h5","styles","root","hr","Sentry","dsn","integrations","Integrations","BrowserTracing","enabled","tracesSampleRate","ReactDOM","StrictMode","theme","document","getElementById"],"mappings":"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","file":"static/js/main.793a8b8f.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\n// import { NetworkConnector } from '@web3-react/network-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n// import { WalletLinkConnector } from '@web3-react/walletlink-connector'\r\n// import { LedgerConnector } from '@web3-react/ledger-connector'\r\n// import { TrezorConnector } from '@web3-react/trezor-connector'\r\n// import { LatticeConnector } from '@web3-react/lattice-connector'\r\n// import { FrameConnector } from '@web3-react/frame-connector'\r\n// import { AuthereumConnector } from '@web3-react/authereum-connector'\r\n// // import { FortmaticConnector } from '@web3-react/fortmatic-connector'\r\n// // import { MagicConnector } from '@web3-react/magic-connector'\r\n// // import { PortisConnector } from '@web3-react/portis-connector'\r\n// import { TorusConnector } from '@web3-react/torus-connector'\r\n\r\nexport enum ConnectorNames {\r\n  Metamask = 'Metamask',\r\n  WalletConnect = 'WalletConnect',\r\n}\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst RPC_URLS: { [chainId: number]: string } = {\r\n  1: process.env.REACT_APP_RPC_URL_1 as string,\r\n  4: process.env.REACT_APP_RPC_URL_4 as string,\r\n}\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [5777, 1337, 4] })\r\n\r\n// export const network = new NetworkConnector({\r\n//   urls: {\r\n//     1337: RPC_URLS[1],\r\n//     4: RPC_URLS[4],\r\n//   },\r\n//   defaultChainId: 1337,\r\n// })\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n  infuraId: process.env.REACT_APP_INFURA_ID,\r\n  rpc: { 4: RPC_URLS[4] },\r\n  chainId: 4,\r\n  supportedChainIds: [4],\r\n})\r\n\r\n// export const walletlink = new WalletLinkConnector({\r\n//   url: RPC_URLS[1],\r\n//   appName: 'NFT-marketplace',\r\n// })\r\n\r\n// export const ledger = new LedgerConnector({\r\n//   chainId: 1,\r\n//   url: RPC_URLS[1],\r\n//   pollingInterval: POLLING_INTERVAL,\r\n// })\r\n\r\n// export const trezor = new TrezorConnector({\r\n//   chainId: 1,\r\n//   url: RPC_URLS[1],\r\n//   pollingInterval: POLLING_INTERVAL,\r\n//   manifestEmail: 'dummy@abc.xyz',\r\n//   manifestAppUrl: 'http://localhost:3000',\r\n// })\r\n\r\n// export const lattice = new LatticeConnector({\r\n//   chainId: 4,\r\n//   appName: 'NFT-marketplace',\r\n//   url: RPC_URLS[4],\r\n// })\r\n\r\n// export const frame = new FrameConnector({ supportedChainIds: [1] })\r\n\r\n// export const authereum = new AuthereumConnector({ chainId: 42 })\r\n\r\n// export const fortmatic = new FortmaticConnector({\r\n//   apiKey: process.env.REACT_APP_FORTMATIC_API_KEY as string,\r\n//   chainId: 4,\r\n// })\r\n\r\n// export const magic = new MagicConnector({\r\n//   apiKey: process.env.REACT_APP_MAGIC_API_KEY as string,\r\n//   chainId: 4,\r\n//   email: 'hello@example.org',\r\n// })\r\n\r\n// export const portis = new PortisConnector({\r\n//   dAppId: process.env.REACT_APP_PORTIS_DAPP_ID as string,\r\n//   networks: [1, 100],\r\n// })\r\n\r\n// export const torus = new TorusConnector({ chainId: 1 })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Metamask]: injected,\r\n  // [ConnectorNames.Network]: network,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  // [ConnectorNames.WalletLink]: walletlink,\r\n  // [ConnectorNames.Ledger]: ledger,\r\n  // [ConnectorNames.Trezor]: trezor,\r\n  // [ConnectorNames.Lattice]: lattice,\r\n  // [ConnectorNames.Frame]: frame,\r\n  // [ConnectorNames.Authereum]: authereum,\r\n  // [ConnectorNames.Fortmatic]: fortmatic,\r\n  // [ConnectorNames.Magic]: magic,\r\n  // [ConnectorNames.Portis]: portis,\r\n  // [ConnectorNames.Torus]: torus,\r\n}\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import NFTT from '@fluuuid/nft-contracts/build/contracts/NFTT.json'\r\nimport create from 'zustand'\r\nimport { BigNumber, Contract, utils, Event } from 'ethers'\r\n\r\nimport { TokenProps } from '../components/Token'\r\nimport { ContractPropsDetails, UserProps } from '../types'\r\nexport interface StateContext {\r\n  isAuthenticated: boolean\r\n  contract?: Contract\r\n  contractDetails?: ContractPropsDetails\r\n  user?: UserProps\r\n  tokensOnSale?: TokenProps[]\r\n  ethPrice?: string\r\n  activatingConnector?: any\r\n  transaction?: any\r\n  library?: any\r\n\r\n  setAuthenticated(authenticated: boolean): void\r\n  setContract(library: any, chainId: number): void\r\n  setTokensOnSale(tokensOnSale: TokenProps[]): void\r\n  setEthPrice(ethPrice: string): void\r\n  setActivatingConnector(activatingConnector: any): void\r\n  setTransaction(transaction: any): void\r\n  //\r\n  buyToken(id: string, price: BigNumber): void\r\n  setUser(address?: string): void\r\n  updateTokensOnSale(): Promise<boolean>\r\n  setTokenSale(id: string, price: BigNumber, onSale: boolean): Promise<boolean>\r\n  transferToken(id: string, to: string): void\r\n  getUserTokens(address?: string): Promise<TokenProps[]>\r\n}\r\n\r\nconst useAppState = create<StateContext>((set, get) => ({\r\n  isAuthenticated: false,\r\n  contract: undefined,\r\n  user: undefined,\r\n  tokensOnSale: [],\r\n  ethPrice: '0.0',\r\n  activatingConnector: undefined,\r\n  transaction: undefined,\r\n\r\n  setAuthenticated: (authenticated: boolean) => set({ isAuthenticated: authenticated }),\r\n  setContract: async (library: any, chainId: number) => {\r\n    try {\r\n      if (!library) throw new Error('No Web3 Found')\r\n\r\n      const networkid = (id: number) => {\r\n        switch (id) {\r\n          case 1337:\r\n            return 5777\r\n          default:\r\n            return id\r\n        }\r\n      }\r\n      const deployedNetwork =\r\n        NFTT.networks[String(networkid(chainId)) as keyof typeof NFTT.networks]\r\n\r\n      if (!deployedNetwork) {\r\n        throw new Error('The network you selected is no supported yet.')\r\n      }\r\n\r\n      const { address } = deployedNetwork\r\n      const contract = new Contract(address, NFTT.abi, library.getSigner())\r\n\r\n      const name = await contract.name()\r\n      const symbol = await contract.symbol()\r\n\r\n      set({\r\n        library,\r\n        contract,\r\n        contractDetails: {\r\n          name,\r\n          symbol,\r\n          address,\r\n        },\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  },\r\n  setUser: async (address?: string) => {\r\n    try {\r\n      const { contract, user, library, getUserTokens } = get()\r\n\r\n      if (!library) throw new Error('No Web3 Found')\r\n      if (!contract) throw new Error('No contract found')\r\n      if (!user && !address) throw new Error('No user found')\r\n\r\n      const balance = utils.formatEther(await library.getBalance(address || user?.address || ''))\r\n      const ownedTokens = await getUserTokens(address || user?.address)\r\n\r\n      set({\r\n        isAuthenticated: true,\r\n        user: { address: address || user?.address || '', balance, ownedTokens },\r\n      })\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  },\r\n  setTokensOnSale: (tokensOnSale: TokenProps[]) => set({ tokensOnSale: tokensOnSale }),\r\n  setEthPrice: (ethPrice: string) => set({ ethPrice: ethPrice }),\r\n  setActivatingConnector: (activatingConnector: any) =>\r\n    set({ activatingConnector: activatingConnector }),\r\n  setTransaction: (transaction: any) => set({ transaction: transaction }),\r\n\r\n  //\r\n  getUserTokens: async (address?: string): Promise<TokenProps[]> => {\r\n    try {\r\n      const { contract, library, user } = get()\r\n\r\n      if (!library) throw new Error('No Web3 Found')\r\n      if (!contract) throw new Error('No contract found')\r\n      if (!user?.address && !address) throw new Error('No user found')\r\n\r\n      const userAddress = user?.address || address\r\n\r\n      const ownedTokensEvents = contract.filters.Transfer(null, userAddress)\r\n      const results: Event[] = await contract.queryFilter(ownedTokensEvents, 0, 'latest')\r\n\r\n      const ownedTokens: Map<string, TokenProps> = new Map()\r\n      await Promise.all(\r\n        results.map(async current => {\r\n          const ownerToken = await contract.ownerOf(current.args?.tokenId)\r\n\r\n          if (ownerToken === userAddress) {\r\n            const { id, name, price } = await contract.tokenMeta(current.args?.tokenId)\r\n            const uri = await contract.tokenURI(current.args?.tokenId)\r\n\r\n            ownedTokens.set(uri, {\r\n              id,\r\n              name,\r\n              price,\r\n              uri,\r\n            })\r\n          }\r\n        })\r\n      )\r\n\r\n      return Array.from(ownedTokens).map(([_, token]) => token)\r\n    } catch (e) {\r\n      console.log(e)\r\n      return []\r\n    }\r\n  },\r\n\r\n  buyToken: async (id: string, price: BigNumber) => {\r\n    try {\r\n      const { setTransaction, contract } = get()\r\n      if (!contract) throw new Error('No contract found')\r\n      const tx = await contract.purchaseToken(id, { value: price })\r\n      setTransaction(tx)\r\n    } catch (e) {\r\n      console.log('on buy', e)\r\n    }\r\n  },\r\n  //\r\n  updateTokensOnSale: async () => {\r\n    try {\r\n      const { contract, setTokensOnSale } = get()\r\n      if (!contract) throw new Error('No contract found')\r\n\r\n      const tokensForSale = (await contract.getAllOnSale()).reduce((acc: TokenProps[], b: any) => {\r\n        if (b.uri !== '') {\r\n          acc.push({ id: b.id, price: b.price, name: b.name, uri: b.uri })\r\n        }\r\n\r\n        return acc\r\n      }, [] as TokenProps[])\r\n      setTokensOnSale(tokensForSale)\r\n      return true\r\n    } catch (e) {\r\n      console.log(e)\r\n      return false\r\n    }\r\n  },\r\n  //\r\n  setTokenSale: async (id: string, price: BigNumber, onSale: boolean = false) => {\r\n    try {\r\n      const { contract, user, setTransaction } = get()\r\n      if (!contract) throw new Error('No contract found')\r\n      if (!user) throw new Error('No user found')\r\n\r\n      const tx = await contract.setTokenSale(id, onSale, price, { from: user.address })\r\n      setTransaction(tx)\r\n      return true\r\n    } catch (e) {\r\n      console.log(e)\r\n      return false\r\n    }\r\n  },\r\n  //\r\n  transferToken: async (id: string, to: string) => {\r\n    try {\r\n      const { contract, user, setTransaction } = get()\r\n      if (!contract) throw new Error('No contract found')\r\n      if (!user) throw new Error('No user found')\r\n\r\n      const tx = await contract['safeTransferFrom(address,address,uint256)'](user.address, to, id, {\r\n        from: user.address,\r\n      })\r\n\r\n      // console.log(tx)\r\n      setTransaction(tx)\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  },\r\n}))\r\n\r\nexport { useAppState }\r\n\r\n// const getAllTokens = async ({ contract }: Props) => {\r\n//   try {\r\n//     const logs = await contract.provider.getLogs({\r\n//       address: contract.address,\r\n//       fromBlock: 0,\r\n//       toBlock: 'latest',\r\n//     })\r\n\r\n//     const decoder = new utils.AbiCoder()\r\n\r\n//     console.log(contract)\r\n\r\n//     const tokens = await Promise.all<TokenProps>(\r\n//       await logs.reduce<any>(async (acc: TokenProps[], log: Log) => {\r\n//         const [from] = decoder.decode(['address'], log.topics[1])\r\n\r\n//         const list = await acc\r\n\r\n//         if (from === utils.getAddress('0x0000000000000000000000000000000000000000')) {\r\n//           const tokenId =\r\n//             log.topics && log.topics[3]\r\n//               ? utils.formatUnits(BigNumber.from(log.topics[3]), 'wei')\r\n//               : undefined\r\n\r\n//           const token = tokenId && (await contract.tokenMeta(tokenId))\r\n//           if (token) {\r\n//             list.push(token)\r\n//           }\r\n//         }\r\n//         return list\r\n//       }, Promise.resolve([]) as Promise<TokenProps[]>)\r\n//     )\r\n\r\n//     return tokens\r\n//   } catch (e) {\r\n//     console.log(e)\r\n//   }\r\n// }\r\n","import { useAppState } from '../state'\r\n\r\nexport const fetcherETHUSD = async (url: string) => {\r\n  try {\r\n    const { setEthPrice } = useAppState.getState()\r\n\r\n    const {\r\n      result: { ethusd },\r\n    } = await (await fetch(url)).json()\r\n    setEthPrice(ethusd)\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const fetcherMetadata = async (url: string) => {\r\n  try {\r\n    return await (await fetch(url)).json()\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n\r\nexport const fetchOwner = async (id: string) => {\r\n  try {\r\n    const { contract } = useAppState.getState()\r\n    if (!contract) throw new Error('Contract not found')\r\n\r\n    return await contract?.ownerOf(id)\r\n  } catch (e) {\r\n    return { error: e.message }\r\n  }\r\n}\r\n","const toShort = (value: string, factor: number = 5) => {\r\n  const slice = Math.round(value.length / factor)\r\n  return `${value.substr(0, slice)}...${value.substr(value.length - slice, value.length)}`\r\n}\r\n\r\nexport { toShort }\r\n","const { REACT_APP_SERVICE_URL } = process.env\r\n\r\nexport const ETHSCAN_API = `${REACT_APP_SERVICE_URL}/ethusd`\r\nexport const METADATA_API = REACT_APP_SERVICE_URL || ''\r\n\r\nexport * from './toShort'\r\nexport * from './formatPriceEth'\r\n","import { FormEvent, MouseEvent, useState } from 'react'\r\nimport { utils, BigNumber, constants } from 'ethers'\r\nimport {\r\n  Spinner,\r\n  Box,\r\n  Flex,\r\n  Card,\r\n  Button,\r\n  Image,\r\n  Input,\r\n  Text,\r\n  Heading,\r\n  Divider,\r\n  NavLink,\r\n} from 'theme-ui'\r\nimport useSWR from 'swr'\r\nimport { useAppState } from '../../state'\r\nimport { fetcherMetadata, fetchOwner } from '../../utils/fetchers'\r\nimport { formatPriceEth, METADATA_API, toShort } from '../../utils'\r\n\r\nexport type TokenProps = {\r\n  id: string\r\n  uri: string\r\n  price: BigNumber\r\n  name: string\r\n}\r\n\r\nexport type TokenCompProps = {\r\n  token: TokenProps\r\n  isOnSale?: boolean\r\n  onTransfer?: boolean\r\n  onBuy?: boolean\r\n  onSale?: boolean\r\n}\r\n\r\nconst Token = ({ token, isOnSale, onTransfer, onBuy, onSale }: TokenCompProps) => {\r\n  const [transfer, setTransfer] = useState<boolean>(false)\r\n  const [onSaleActive, setOnSale] = useState<boolean>(false)\r\n  const [address, setAddress] = useState<string>('')\r\n  const [price, setPrice] = useState<string>('')\r\n  const { user, ethPrice, contractDetails, transferToken, buyToken, setTokenSale } = useAppState()\r\n\r\n  const onTransferClick = async (e: FormEvent | MouseEvent) => {\r\n    e.preventDefault()\r\n    if (onTransfer && utils.isAddress(address)) {\r\n      transferToken(token.id, address)\r\n      setTransfer(false)\r\n    }\r\n  }\r\n\r\n  const onBuyClick = (e: MouseEvent) => {\r\n    e.preventDefault()\r\n    onBuy && buyToken(token.id, token.price)\r\n  }\r\n\r\n  const onSaleClick = async (e: MouseEvent) => {\r\n    e.preventDefault()\r\n    if (!onSale) return\r\n    try {\r\n      await setTokenSale(token.id, utils.parseEther(price), true)\r\n      setOnSale(false)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n\r\n  const { data: owner } = useSWR(token.id, fetchOwner)\r\n  const { data } = useSWR(`${METADATA_API}/token/${token.id}`, fetcherMetadata)\r\n\r\n  const tokenPriceEth = formatPriceEth(token.price, ethPrice)\r\n\r\n  if (!data)\r\n    return (\r\n      <Card variant=\"nft\">\r\n        <Spinner />\r\n      </Card>\r\n    )\r\n\r\n  if (!data.name) return null\r\n\r\n  return (\r\n    <Card variant=\"nft\">\r\n      <Image\r\n        sx={{ width: '100%', bg: 'white', borderBottom: '1px solid black' }}\r\n        src={data.image}\r\n      />\r\n      <Box p={3} pt={2}>\r\n        <Heading as=\"h2\">{data.name}</Heading>\r\n        <Divider variant=\"divider.nft\" />\r\n        <Box>\r\n          <Text sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>Price</Text>\r\n          <Heading as=\"h3\" sx={{ color: 'green', m: 0, fontWeight: 'bold' }}>\r\n            {constants.EtherSymbol} {Number(utils.formatEther(token.price)).toFixed(2)}{' '}\r\n            <Text sx={{ color: 'navy' }} as=\"span\" variant=\"text.body\">\r\n              ({tokenPriceEth})\r\n            </Text>\r\n          </Heading>\r\n          {owner && typeof owner === 'string' && !onTransfer && (\r\n            <Box mt={2}>\r\n              <Text as=\"p\" sx={{ color: 'lightBlue', fontSize: 1, fontWeight: 'bold' }}>\r\n                Owner\r\n              </Text>\r\n              <NavLink\r\n                target=\"_blank\"\r\n                href={`https://rinkeby.etherscan.io/address/${owner}`}\r\n                variant=\"owner\"\r\n                style={{\r\n                  textOverflow: 'ellipsis',\r\n                  width: '100%',\r\n                  position: 'relative',\r\n                  overflow: 'hidden',\r\n                }}\r\n              >\r\n                {toShort(owner)}\r\n              </NavLink>\r\n            </Box>\r\n          )}\r\n          <Box mt={2}>\r\n            <NavLink\r\n              target=\"_blank\"\r\n              href={`https://testnets.opensea.io/assets/${contractDetails?.address}/${token.id}`}\r\n              variant=\"openSea\"\r\n            >\r\n              View on Opensea.io\r\n            </NavLink>\r\n          </Box>\r\n        </Box>\r\n\r\n        {onTransfer && (\r\n          <Flex mt={3} sx={{ justifyContent: 'center' }}>\r\n            {transfer && (\r\n              <Box sx={{ width: '100%' }}>\r\n                <Flex\r\n                  onSubmit={onTransferClick}\r\n                  sx={{ width: '100%', flexDirection: 'column' }}\r\n                  as=\"form\"\r\n                >\r\n                  <Input\r\n                    onChange={e => setAddress(e.currentTarget.value)}\r\n                    placeholder=\"ETH Address 0x0...\"\r\n                  />\r\n                </Flex>\r\n                <Flex mt={2}>\r\n                  <Button sx={{ bg: 'green' }} onClick={onTransferClick} variant=\"quartiary\">\r\n                    Confirm\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ bg: 'red' }}\r\n                    ml={2}\r\n                    onClick={() => setTransfer(false)}\r\n                    variant=\"quartiary\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Flex>\r\n              </Box>\r\n            )}\r\n            {onSaleActive && (\r\n              <Box sx={{ width: '100%' }}>\r\n                <Flex\r\n                  onSubmit={onTransferClick}\r\n                  sx={{ width: '100%', flexDirection: 'column' }}\r\n                  as=\"form\"\r\n                >\r\n                  <Input\r\n                    onChange={e => setPrice(e.currentTarget.value)}\r\n                    placeholder=\"Token Price in ETH\"\r\n                  />\r\n                </Flex>\r\n                <Flex mt={2}>\r\n                  <Button sx={{ bg: 'green' }} onClick={onSaleClick} variant=\"quartiary\">\r\n                    Confirm\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ bg: 'red' }}\r\n                    ml={2}\r\n                    onClick={() => setOnSale(false)}\r\n                    variant=\"quartiary\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Flex>\r\n              </Box>\r\n            )}\r\n            {!transfer && !onSaleActive && (\r\n              <Flex sx={{ flexDirection: 'column', width: '100%', justifyContent: 'center' }}>\r\n                <Button onClick={() => setTransfer(!transfer)} variant=\"tertiary\">\r\n                  Transfer\r\n                </Button>\r\n                {isOnSale ? (\r\n                  <Button\r\n                    mt={2}\r\n                    onClick={() => onSale && setTokenSale(token.id, token.price, false)}\r\n                    variant=\"tertiary\"\r\n                  >\r\n                    Remove from Sale\r\n                  </Button>\r\n                ) : (\r\n                  <Button mt={2} onClick={() => setOnSale(!onSaleActive)} variant=\"tertiary\">\r\n                    Put Token for Sale\r\n                  </Button>\r\n                )}\r\n              </Flex>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        {onBuy && (\r\n          <Flex mt={3} sx={{ justifyContent: 'center', width: '100%' }}>\r\n            <Button\r\n              sx={{\r\n                opacity: !!user?.ownedTokens.find(\r\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\r\n                )\r\n                  ? 0.5\r\n                  : 1,\r\n                pointerEvents: !!user?.ownedTokens.find(\r\n                  a => utils.formatUnits(a.id) === utils.formatUnits(token.id)\r\n                )\r\n                  ? 'none'\r\n                  : 'visible',\r\n              }}\r\n              onClick={onBuyClick}\r\n              variant=\"quartiary\"\r\n            >\r\n              Buy Token\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n      </Box>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport { Token }\r\n","import { BigNumberish, utils } from 'ethers'\r\n\r\nconst formatPriceEth = (price: BigNumberish, ethPrice: string = '0') =>\r\n  new Intl.NumberFormat('us-GB', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(Number(utils.formatEther(price)) * Number(ethPrice))\r\n\r\nexport { formatPriceEth }\r\n","import { useHistory, useLocation } from 'react-router'\r\nimport { Box, NavLink, Flex, Heading, Image, Text } from 'theme-ui'\r\nimport { useAppState } from '../../state'\r\nimport { UserMenu } from '..'\r\n\r\nexport type HeaderProps = {\r\n  //\r\n}\r\n\r\nconst Header = () => {\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const { user, isAuthenticated } = useAppState()\r\n\r\n  return (\r\n    <Box bg=\"black\">\r\n      <Flex sx={{ alignItems: 'center', p: 3 }} as=\"nav\">\r\n        <Image\r\n          onClick={() => {\r\n            history.push('/')\r\n          }}\r\n          sx={{ width: 50, cursor: 'pointer' }}\r\n          src=\"/static/logo.png\"\r\n        />\r\n        <Heading sx={{ ml: [1, 2], color: 'white' }} as=\"h4\">\r\n          ERC721 Marketplace{' '}\r\n          <Text sx={{ display: ['none', 'block'] }}>+ OpenSea.io on Rinkeby Network</Text>\r\n        </Heading>\r\n        <UserMenu />\r\n      </Flex>\r\n      {isAuthenticated && user && (\r\n        <Flex bg=\"midGray\" py={3} sx={{ justifyContent: 'center' }}>\r\n          <NavLink\r\n            sx={{\r\n              pointerEvents: location.pathname === '/' ? 'none' : 'visible',\r\n              color: location.pathname === '/' ? 'green' : 'white',\r\n            }}\r\n            onClick={() => history.push('/')}\r\n          >\r\n            Marketplace\r\n          </NavLink>\r\n          <Box sx={{ width: 50 }} />\r\n          <NavLink\r\n            sx={{\r\n              pointerEvents: location.pathname === '/profile' ? 'none' : 'visible',\r\n              color: location.pathname === '/profile' ? 'green' : 'white',\r\n            }}\r\n            onClick={() => history.push('/profile')}\r\n          >\r\n            Profile\r\n          </NavLink>\r\n        </Flex>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport { Header }\r\n","import { BigNumber, utils } from 'ethers'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport { Box, Button, Flex, Grid, Heading } from 'theme-ui'\r\nimport { useAppState } from '../../state'\r\nimport { Token } from '..'\r\n\r\nexport type GalleryProps = {}\r\ntype StateOrder = 'price' | 'alpha'\r\n\r\nconst Gallery = () => {\r\n  const { user, tokensOnSale } = useAppState()\r\n  const updateTokensOnSale = useAppState(\r\n    useCallback(({ updateTokensOnSale }) => updateTokensOnSale, [])\r\n  )\r\n\r\n  const [order, setOrder] = useState<StateOrder>('alpha')\r\n\r\n  useEffect(() => {\r\n    updateTokensOnSale()\r\n  }, [updateTokensOnSale])\r\n\r\n  return (\r\n    <Box>\r\n      <Heading as=\"h1\">Marketplace</Heading>\r\n      <Flex sx={{ alignItems: 'center' }} mb={3}>\r\n        <Heading as=\"h3\" sx={{ color: 'lightGray' }}>\r\n          Order:\r\n        </Heading>\r\n        <Flex ml={3}>\r\n          <Button\r\n            mr={2}\r\n            onClick={() => setOrder('alpha')}\r\n            variant=\"filter\"\r\n            disabled={order === 'alpha'}\r\n          >\r\n            Alphabetically\r\n          </Button>\r\n          <Button onClick={() => setOrder('price')} variant=\"filter\" disabled={order === 'price'}>\r\n            Price\r\n          </Button>\r\n        </Flex>\r\n      </Flex>\r\n      <Grid gap={4} columns={['1fr 1fr', '1fr 1fr', '1fr 1fr 1fr']}>\r\n        {tokensOnSale\r\n          ?.sort((a, b) =>\r\n            order === 'alpha'\r\n              ? BigNumber.from(a.id)\r\n                  .toString()\r\n                  .localeCompare(BigNumber.from(b.id).toString(), undefined, { numeric: true })\r\n              : Number(utils.formatEther(a.price.sub(b.price)))\r\n          )\r\n          .map((i, index) => (\r\n            <Token onBuy={!user?.ownedTokens.find(t => t.id === i.id)} token={i} key={index} />\r\n          ))}\r\n      </Grid>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport { Gallery }\r\n","import { Flex, Heading, Box } from 'theme-ui'\r\nimport { useHistory } from 'react-router'\r\nimport { EtherSymbol } from '@ethersproject/constants'\r\nimport { useAppState } from '../../state'\r\nimport { Identicon } from '..'\r\nimport { toShort } from '../../utils'\r\n\r\nexport type UserMenuProps = {\r\n  //\r\n}\r\n\r\nconst UserMenu = () => {\r\n  const { user, isAuthenticated } = useAppState()\r\n\r\n  const history = useHistory()\r\n\r\n  return (\r\n    <Flex sx={{ ml: 'auto', justifySelf: 'flex-end' }}>\r\n      {isAuthenticated && user && (\r\n        <>\r\n          <Box sx={{ display: ['none', 'block'] }}>\r\n            <Heading sx={{ p: 0, color: 'white' }} as=\"h4\">\r\n              {toShort(user.address)}\r\n            </Heading>\r\n            <Heading sx={{ p: 0, mt: 1, textAlign: 'right', color: 'white' }} as=\"h5\">\r\n              {EtherSymbol}\r\n              {user.balance}\r\n            </Heading>\r\n          </Box>\r\n          <Box\r\n            onClick={() => {\r\n              history.push('/profile')\r\n            }}\r\n            sx={{\r\n              cursor: 'pointer',\r\n              ml: [0, 3],\r\n              height: 30,\r\n              width: 30,\r\n              borderRadius: '100%',\r\n            }}\r\n          >\r\n            <Identicon size={30} address={user.address} />\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport { UserMenu }\r\n","import { ElementType } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport { Route } from 'react-router-dom'\r\nimport { useAppState } from '../../state'\r\n\r\ntype PrivateRouteProps = {\r\n  component: ElementType\r\n  path: string\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, path }: PrivateRouteProps) => {\r\n  const { isAuthenticated } = useAppState()\r\n\r\n  return (\r\n    <Route\r\n      path={path}\r\n      render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n    />\r\n  )\r\n}\r\n\r\nexport { PrivateRoute }\r\n","import { useEffect, useRef } from 'react'\r\nimport { Flex } from 'theme-ui'\r\nimport jazzicon from 'jazzicon'\r\n\r\nexport type IdenticonProps = {\r\n  address: string\r\n  size?: number\r\n}\r\n\r\nconst Identicon = ({ address, size = 16 }: IdenticonProps) => {\r\n  const ref = useRef<HTMLDivElement>(null)\r\n  useEffect(() => {\r\n    if (!ref.current) return\r\n    try {\r\n      ref.current.innerHTML = ''\r\n      ref.current.appendChild(jazzicon(size, parseInt(address.slice(2, 10), 16)))\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [address, size])\r\n\r\n  return (\r\n    <Flex\r\n      ref={ref}\r\n      sx={{\r\n        justifyContent: 'center',\r\n        width: size + 2,\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Identicon }\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { Card, Flex, Spinner } from 'theme-ui'\r\nimport { useAppState } from '../../state'\r\nimport { toShort } from '../../utils'\r\n\r\nconst TransactionProgress = () => {\r\n  const { setTransaction, setUser, updateTokensOnSale } = useAppState(\r\n    useCallback(\r\n      ({ setTransaction, setUser, updateTokensOnSale }) => ({\r\n        setTransaction,\r\n        setUser,\r\n        updateTokensOnSale,\r\n      }),\r\n      []\r\n    )\r\n  )\r\n\r\n  const transactionRef = useRef(useAppState.getState().transaction)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  const update = useCallback(async () => {\r\n    await setUser()\r\n    setTransaction(undefined)\r\n    updateTokensOnSale()\r\n    setLoading(false)\r\n  }, [setTransaction, setUser, updateTokensOnSale])\r\n\r\n  useEffect(() => {\r\n    useAppState.subscribe(async ({ transaction }) => {\r\n      try {\r\n        transactionRef.current = transaction\r\n        if (!transaction) return\r\n        setLoading(true)\r\n        const receipt = await transaction.wait()\r\n        if (receipt.confirmations >= 1) {\r\n          update()\r\n        }\r\n      } catch (e) {\r\n        console.log('transaction', e)\r\n        setLoading(false)\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      useAppState.destroy()\r\n    }\r\n  }, [update])\r\n\r\n  if (!loading) return null\r\n\r\n  return (\r\n    <Card variant=\"transaction\">\r\n      <Flex sx={{ alignItems: 'center' }}>\r\n        <Spinner size={20} color=\"white\" sx={{ mr: 2 }} /> Transaction:{' '}\r\n        {toShort(transactionRef.current.hash)}\r\n      </Flex>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport { TransactionProgress }\r\n","import { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport { Flex, Button, Spinner, Image } from 'theme-ui'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ConnectorNames, connectorsByName } from '../../connectors'\r\nimport { useAppState } from '../../state'\r\n\r\nconst iconsMap = {\r\n  [ConnectorNames.Metamask]: 'https://docs.metamask.io/metamask-fox.svg',\r\n  [ConnectorNames.WalletConnect]: 'https://walletconnect.org/walletconnect-logo.svg',\r\n}\r\n\r\nconst Login = () => {\r\n  const { activatingConnector, setActivatingConnector } = useAppState()\r\n  const { connector, activate } = useWeb3React()\r\n  return (\r\n    <Flex sx={{ justifyContent: 'center' }}>\r\n      {Object.keys(connectorsByName).map((name: string) => {\r\n        const currentConnector = connectorsByName[name as keyof typeof connectorsByName]\r\n        const activating = currentConnector === activatingConnector\r\n        const connected = currentConnector === connector\r\n\r\n        return (\r\n          <Button\r\n            mt={2}\r\n            mr={2}\r\n            variant=\"connect\"\r\n            sx={{\r\n              borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n              position: 'relative',\r\n              maxWidth: 250,\r\n            }}\r\n            key={name}\r\n            onClick={() => {\r\n              setActivatingConnector(currentConnector)\r\n              activate(connectorsByName[name as keyof typeof connectorsByName] as AbstractConnector)\r\n            }}\r\n          >\r\n            {iconsMap[name as keyof typeof connectorsByName] && (\r\n              <Image\r\n                sx={{ width: 35, height: 35 }}\r\n                mr={3}\r\n                src={iconsMap[name as keyof typeof connectorsByName]}\r\n              />\r\n            )}\r\n\r\n            {name}\r\n            {activating && <Spinner size={20} color=\"white\" sx={{ ml: 3 }} />}\r\n          </Button>\r\n        )\r\n      })}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport { Login }\r\n","import { useWeb3React } from '@web3-react/core'\r\nimport { Gallery, Login } from '../components'\r\nimport { useAppState } from '../state'\r\n\r\nconst Marketplace = () => {\r\n  const { user } = useAppState()\r\n  const { active } = useWeb3React()\r\n\r\n  return (\r\n    <>\r\n      {!user && <Login />}\r\n      {user && active && <Gallery />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Marketplace }\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\nimport { Marketplace, Profile, Connect } from './'\r\nimport { Header, PrivateRoute, TransactionProgress } from '../components'\r\nimport { Container } from 'theme-ui'\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <Header />\r\n      <Web3ReactProvider getLibrary={getLibrary}>\r\n        <Connect>\r\n          <Container>\r\n            <Switch>\r\n              <PrivateRoute path=\"/profile\" component={Profile} />\r\n              <Route exact path=\"/\" component={Marketplace} />\r\n            </Switch>\r\n            <TransactionProgress />\r\n          </Container>\r\n        </Connect>\r\n      </Web3ReactProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport { Root }\r\n","import { utils } from 'ethers'\r\nimport { Text, Box, Heading, Grid, Divider } from 'theme-ui'\r\nimport { Token } from '../components'\r\nimport { useAppState } from '../state'\r\n\r\nexport type ProfileProps = {}\r\n\r\nconst Profile = () => {\r\n  const { user, tokensOnSale } = useAppState()\r\n\r\n  if (!user) return null\r\n\r\n  const { address, balance, ownedTokens } = user\r\n\r\n  return (\r\n    <Box>\r\n      <Heading as=\"h1\">My Profile</Heading>\r\n      <Grid columns={['1fr', '1fr 1fr']} sx={{ overflow: 'hidden', gap: '0 20px' }}>\r\n        <Box>\r\n          <Heading as=\"h4\" sx={{ color: 'green' }}>\r\n            Address\r\n          </Heading>\r\n          <Text>{address}</Text>\r\n        </Box>\r\n        <Box>\r\n          <Heading as=\"h4\" sx={{ color: 'green' }}>\r\n            Balance\r\n          </Heading>\r\n          <Text>Ξ {balance}</Text>\r\n        </Box>\r\n      </Grid>\r\n      <Divider variant=\"divider.nft\" sx={{ my: 7 }} />\r\n      <Box my={5}>\r\n        {ownedTokens && ownedTokens.length > 0 ? (\r\n          <Box>\r\n            <Heading as=\"h2\">\r\n              My items{' '}\r\n              <Text variant=\"text.body\" as=\"span\">\r\n                ({ownedTokens.length} item)\r\n              </Text>\r\n            </Heading>\r\n            <Grid gap={4} columns={['1fr 1fr', '1fr 1fr 1fr']}>\r\n              {ownedTokens.map((t, index) => (\r\n                <Token\r\n                  isOnSale={\r\n                    !!tokensOnSale?.find(a => utils.formatUnits(a.id) === utils.formatUnits(t.id))\r\n                  }\r\n                  onSale\r\n                  onTransfer\r\n                  token={t}\r\n                  key={index}\r\n                />\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        ) : (\r\n          ownedTokens && (\r\n            <Box>\r\n              <Heading as=\"h2\">You don't own any NFT tokens</Heading>\r\n            </Box>\r\n          )\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport { Profile }\r\n","import { FC, useEffect, useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\n\r\nimport { Container, Text, Heading } from 'theme-ui'\r\nimport useSWR from 'swr'\r\nimport { useEagerConnect, useInactiveListener } from '../hooks/web3'\r\nimport { ETHSCAN_API } from '../utils'\r\nimport { fetcherETHUSD } from '../utils/fetchers'\r\nimport { useAppState } from '../state'\r\n\r\nfunction getErrorMessage(error: Error) {\r\n  console.log(error)\r\n\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network. Please connect to Rinkeby network\"\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorWalletConnect\r\n  ) {\r\n    return 'Please authorize this website to access your Ethereum account.'\r\n  } else {\r\n    console.error(error)\r\n    return 'An unknown error occurred. Check the console for more details.'\r\n  }\r\n}\r\n\r\nconst Connect: FC = ({ children }) => {\r\n  const { activatingConnector } = useAppState()\r\n  const { library, chainId, account, error } = useWeb3React()\r\n\r\n  const { setContract, setUser } = useAppState(\r\n    useCallback(\r\n      ({ setContract, setUser }) => ({\r\n        setContract,\r\n        setUser,\r\n      }),\r\n      []\r\n    )\r\n  )\r\n\r\n  useSWR(ETHSCAN_API, fetcherETHUSD)\r\n\r\n  useEffect(() => {\r\n    if (!chainId || !account || !library) return\r\n\r\n    const update = async () => {\r\n      try {\r\n        await setContract(library, chainId)\r\n        setUser(account)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    update()\r\n  }, [chainId, account, library, setContract, setUser])\r\n\r\n  const triedEager = useEagerConnect()\r\n  useInactiveListener(!triedEager || !!activatingConnector)\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Container>\r\n          <Heading as=\"h2\">❌ Something is not right</Heading>\r\n          <Text sx={{ mt: 3 }}>{getErrorMessage(error)}</Text>\r\n        </Container>\r\n      ) : (\r\n        children\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Connect }\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from '../connectors'\r\n// import { URI_AVAILABLE } from '@web3-react/walletconnect-connector'\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active, connector } = useWeb3React()\r\n\r\n  const [tried, setTried] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // console.log(connector)\r\n\r\n    // if (connector === walletconnect) {\r\n    //   walletconnect.on(URI_AVAILABLE, uri => {\r\n    //     console.log(uri)\r\n    //   })\r\n    // }\r\n\r\n    if (connector === injected) {\r\n      injected.isAuthorized().then((isAuthorized: boolean) => {\r\n        if (isAuthorized) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true)\r\n          })\r\n        } else {\r\n          setTried(true)\r\n        }\r\n      })\r\n    }\r\n  }, [activate, connector])\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true)\r\n    }\r\n  }, [tried, active])\r\n\r\n  return tried\r\n}\r\n\r\n// type OnChangeProps = {\r\n//   account?: string\r\n//   chainId?: string | number\r\n// }\r\n\r\nexport function useInactiveListener(suppress: boolean = false) {\r\n  const { active, error } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window as any\r\n\r\n    if (ethereum) ethereum.autoRefreshOnNetworkChange = true\r\n\r\n    // if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n    //   const handleConnect = () => {\r\n    //     console.log(\"!!!!! Handling 'connect' event\")\r\n    //     activate(injected)\r\n    //   }\r\n    //   const handleChainChanged = (chainId: string | number) => {\r\n    //     console.log(\"11111 Handling 'chainChanged' event with payload\", chainId)\r\n    //     activate(injected)\r\n    //   }\r\n    //   const handleAccountsChanged = (accounts: string[]) => {\r\n    //     console.log(\"11111 Handling 'accountsChanged' event with payload\", accounts)\r\n    //     if (accounts.length > 0) {\r\n    //       activate(injected)\r\n    //     }\r\n    //   }\r\n    //   const handleNetworkChanged = (networkId: string | number) => {\r\n    //     console.log(\"11111 Handling 'networkChanged' event with payload\", networkId)\r\n    //     activate(injected)\r\n    //   }\r\n\r\n    //   ethereum.on('connect', handleConnect)\r\n    //   ethereum.on('chainChanged', handleChainChanged)\r\n    //   ethereum.on('accountsChanged', handleAccountsChanged)\r\n    //   ethereum.on('networkChanged', handleNetworkChanged)\r\n\r\n    //   return () => {\r\n    //     if (ethereum.removeListener) {\r\n    //       ethereum.removeListener('connect', handleConnect)\r\n    //       ethereum.removeListener('chainChanged', handleChainChanged)\r\n    //       ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n    //       ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n    //     }\r\n    //   }\r\n    // }\r\n  }, [active, error, suppress])\r\n}\r\n","import { SxProp, Theme } from 'theme-ui'\r\n\r\nconst defaultButton = {\r\n  border: 0,\r\n  fontFamily: 'body',\r\n  fontWeight: 'normal',\r\n  lineHeight: 'body',\r\n  fontSize: [1, 2],\r\n  paddingX: 3,\r\n  paddingY: 2,\r\n  outline: 'none',\r\n  whiteSpace: 'nowrap',\r\n  cursor: 'pointer',\r\n  transition: 'all 0.1s ease-out',\r\n  '&:hover': {\r\n    opacity: 0.7,\r\n  },\r\n} as SxProp\r\n\r\nexport const Palette = {\r\n  text: '#FFF',\r\n  white: '#fff',\r\n  background: '#333',\r\n  primary: '#111',\r\n  secondary: '#333',\r\n  gray: '#F7F9FA',\r\n  lightGray: '#e0e0e0',\r\n  midGray: '#222',\r\n  lightBlue: '#EFF7FF',\r\n  navy: '#e0e0e0',\r\n  green: 'rgb(99, 255, 203)',\r\n  amber: '#D58408',\r\n  lightGreen: '#AEC',\r\n  red: '#999',\r\n  muted: '#999',\r\n  transparent: 'transparent',\r\n  white20: 'rgba(255, 255, 255, .2)',\r\n  black66: 'rgba(0, 0, 0, .66)',\r\n}\r\n\r\nexport type PaletteKeys = keyof typeof Palette\r\n\r\nexport const Sizes = {\r\n  header: 60,\r\n  container: 1020,\r\n  button: [100, 250],\r\n  logo: 60,\r\n  sidemenu: 240,\r\n  chart: 950,\r\n}\r\n\r\nexport default {\r\n  breakpoints: ['40em', '52em', '64em'],\r\n  space: [0, 4, 10, 16, 20, 30, 42, 56, 78, 125, 150],\r\n  fontSizes: [10, 12, 16, 26, 36, 50, 75],\r\n  fonts: {\r\n    body: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\r\n    heading: 'inherit',\r\n  },\r\n  layout: {\r\n    container: {\r\n      py: 4,\r\n      px: 3,\r\n      pb: 10,\r\n    },\r\n  },\r\n  sizes: {\r\n    ...Sizes,\r\n  },\r\n  cards: {\r\n    nft: {\r\n      bg: 'background',\r\n      border: '1px solid',\r\n      borderColor: 'muted',\r\n      textAlign: 'left',\r\n    },\r\n    transaction: {\r\n      bg: 'amber',\r\n      position: 'fixed',\r\n      top: 50,\r\n      right: 20,\r\n      p: 4,\r\n      borderRadius: 10,\r\n    },\r\n  },\r\n  links: {\r\n    nav: {\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      transition: 'all .2s ease-out',\r\n      '&:hover': {\r\n        opacity: 0.5,\r\n        color: 'white',\r\n      },\r\n    },\r\n    openSea: {\r\n      color: 'green',\r\n      fontSize: 1,\r\n      opacity: 0.5,\r\n      '&:after': {\r\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='rgb(99, 255, 203)' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\r\n        ml: 1,\r\n      },\r\n      transition: 'all .2s ease-out',\r\n      '&:hover': {\r\n        opacity: 1,\r\n        color: 'green',\r\n      },\r\n    },\r\n    owner: {\r\n      color: 'white',\r\n      fontSize: 1,\r\n      opacity: 0.5,\r\n      transition: 'all .2s ease-out',\r\n      '&:hover': {\r\n        opacity: 1,\r\n        color: 'white',\r\n      },\r\n      '&:after': {\r\n        content: `url(\"data:image/svg+xml,%3Csvg width='8' height='8' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M1.262 0l2.529 2.524L0 6.314 1.685 8l3.79-3.79L8 6.732V0z' fill='white' fill-rule='nonzero' /%3E%3C/svg%3E\")`,\r\n        ml: 1,\r\n      },\r\n    },\r\n  },\r\n  buttons: {\r\n    primary: {\r\n      ...defaultButton,\r\n      fontWeight: 'bold',\r\n      minWidth: 'button',\r\n      bg: 'primary',\r\n      color: 'white',\r\n      textAlign: 'center',\r\n      display: 'flex',\r\n      width: '100%',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n\r\n    secondary: {\r\n      cursor: 'pointer',\r\n      variant: 'buttons.primary',\r\n      bg: 'secondary',\r\n      fontWeight: 'body',\r\n    },\r\n    tertiary: {\r\n      variant: 'buttons.secondary',\r\n      color: 'white',\r\n      bg: 'primary',\r\n    },\r\n    quartiary: {\r\n      variant: 'buttons.tertiary',\r\n      bg: 'green',\r\n      color: 'black',\r\n      minWidth: 'auto',\r\n      py: 2,\r\n    },\r\n    filter: {\r\n      variant: 'buttons.tertiary',\r\n      bg: 'lightGreen',\r\n      color: 'black',\r\n      minWidth: 'auto',\r\n      py: 1,\r\n      fontSize: 1,\r\n      '&:disabled': {\r\n        pointerEvents: 'none',\r\n        opacity: 0.5,\r\n      },\r\n    },\r\n    connect: {\r\n      variant: 'buttons.tertiary',\r\n      py: 4,\r\n      px: 5,\r\n    },\r\n  },\r\n  fontWeights: {\r\n    heading: 300,\r\n    body: 400,\r\n    bold: 700,\r\n  },\r\n  lineHeights: {\r\n    body: 1.333333333,\r\n    heading: 1.066666667,\r\n    subheading: 2,\r\n  },\r\n  colors: {\r\n    ...Palette,\r\n  },\r\n  divider: {\r\n    nft: {\r\n      color: 'muted',\r\n      height: 1,\r\n      my: 2,\r\n    },\r\n  },\r\n  forms: {\r\n    input: {\r\n      paddingX: 2,\r\n      paddingY: 2,\r\n      borderRadius: '5px',\r\n      bg: 'white',\r\n      color: 'primary',\r\n    },\r\n  },\r\n  text: {\r\n    body: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n      lineHeight: 'body',\r\n      fontSize: 1,\r\n    },\r\n    heading: {\r\n      py: 2,\r\n    },\r\n    bold: {\r\n      fontWeight: 'bold',\r\n    },\r\n    paragraph: {\r\n      fontFamily: 'body',\r\n      fontWeight: 'body',\r\n      lineHeight: 2,\r\n      fontSize: 2,\r\n      letterSpacing: 0.44,\r\n      color: 'white',\r\n    },\r\n    h1: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 6,\r\n      letterSpacing: -0.44,\r\n    },\r\n    h2: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'heading',\r\n      fontWeight: 'heading',\r\n      fontSize: 5,\r\n      letterSpacing: -0.44,\r\n    },\r\n    h3: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'subheading',\r\n      fontWeight: 'heading',\r\n      fontSize: 3,\r\n    },\r\n    h4: {\r\n      fontFamily: 'heading',\r\n      lineHeight: 'subheading',\r\n      fontWeight: 'bold',\r\n      fontSize: [1, 2],\r\n    },\r\n    h5: {\r\n      fontFamily: 'heading',\r\n      fontWeight: 'bold',\r\n      lineHeight: 1.6,\r\n      fontSize: 0,\r\n      letterSpacing: 1.5,\r\n    },\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: 'body',\r\n      lineHeight: 'body',\r\n      fontWeight: 'body',\r\n    },\r\n    a: {\r\n      color: 'primary',\r\n      '&:hover': {\r\n        color: 'inherit',\r\n      },\r\n    },\r\n    hr: {\r\n      height: 1,\r\n      opacity: 0.5,\r\n      bg: 'black',\r\n      color: 'black',\r\n      my: 6,\r\n    },\r\n  },\r\n} as Theme\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ThemeProvider } from 'theme-ui'\r\nimport * as Sentry from '@sentry/react'\r\nimport { Integrations } from '@sentry/tracing'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { Root } from './layout'\r\nimport theme from './theme'\r\n\r\nSentry.init({\r\n  dsn: 'https://06951a956c7a4a6db2f776b1bc697efd@o72860.ingest.sentry.io/5842491',\r\n  integrations: [new Integrations.BrowserTracing()],\r\n  enabled: process.env.NODE_ENV !== 'development',\r\n\r\n  // Set tracesSampleRate to 1.0 to capture 100%\r\n  // of transactions for performance monitoring.\r\n  // We recommend adjusting this value in production\r\n  tracesSampleRate: 1.0,\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Root />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}